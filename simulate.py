import pybullet as p
import pybullet_data
import time
import pyrosim.pyrosim as pyrosim
import numpy

physicsClient = p.connect(p.GUI)
p.setAdditionalSearchPath(pybullet_data.getDataPath())
#p.configureDebugVisualizer(p.COV_ENABLE_GUI, 0)
# adding the force of gravity
p.setGravity(0,0,-9.8)
# adding a floor
planeId = p.loadURDF("plane.urdf")
robotId = p.loadURDF("body.urdf")

# loading in the world stored in box.sdf generated by generate.py
p.loadSDF("world.sdf")
pyrosim.Prepare_To_Simulate(robotId)
# note: the length of the array must match the for loop index
backLegSensorValues = numpy.zeros(1000)
for i in range(1000):
    p.stepSimulation()
    backLegSensorValues[i] = pyrosim.Get_Touch_Sensor_Value_For_Link("BackLeg")
    time.sleep(1/60)
    #print(i)
print(backLegSensorValues)
numpy.save('data/sensor_output.npy', backLegSensorValues)
p.disconnect()

